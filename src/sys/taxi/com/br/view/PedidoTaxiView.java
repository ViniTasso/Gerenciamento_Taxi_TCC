/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PedidoTaxiView.java
 *
 * Created on 09/02/2013, 11:11:31
 */
package sys.taxi.com.br.view;

import br.com.adilson.util.PrinterMatrix;
import java.awt.Color;
import java.awt.EventQueue;
import java.beans.Beans;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import javax.swing.JRadioButton;
import javax.swing.JTable;

/**
 *
 * @author VGCT
 */
public class PedidoTaxiView extends JPanel {

    public String dadosCampo;

    public PedidoTaxiView(String pd) {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
        listDiariaCadastro.clear();
        //testeFuncionariosAtivos();
        Filtros.setBackground(new Color(0, 0, 0, 0));
        Tabela.setBackground(new Color(0, 0, 0, 0));
        Pesquisar.setBackground(new Color(0, 0, 0, 0));
        jPanel7.setBackground(new Color(0, 0, 0, 0));
        Campos.setBackground(new Color(0, 0, 0, 0));

        if ("C".equals(pd)){
            Botoes.setVisible(false);
            BOTFinalizarPedido.setVisible(false);
            BOTGerenciarPedidos.setVisible(false);
        }else{
            Botoes.setVisible(true);
            BOTFinalizarPedido.setVisible(true);
            BOTGerenciarPedidos.setVisible(true);
        }
        
        atualizaLocais(listLocal1, "R1");
        atualizaLocais(listLocal2, "R2");
        BOTFiltrarFuncionarios.setVisible(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("taxiPU").createEntityManager();
        queryPedidos = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Pedidostaxi p");
        listPedidosTodos = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryPedidos.getResultList());
        rowSorterToStringConverter1 = new sys.taxi.com.all.util.RowSorterToStringConverter();
        queryCliente = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Cliente c");
        listClienteTodos = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : queryCliente.getResultList();
        queryDiariafunc = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM Diariafunc d");
        listDiariafuncTodos = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : queryDiariafunc.getResultList();
        unidadeListCellRendererDiariaFuncionario1 = new sys.taxi.com.all.renderer.UnidadeListCellRendererDiariaFuncionario();
        unidadeListCellRendererCliente1 = new sys.taxi.com.all.renderer.UnidadeListCellRendererCliente();
        selecaoSituacao = new javax.swing.ButtonGroup();
        testeTamanho = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT e FROM Enderecocli e");
        listTesteTamanho = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(testeTamanho.getResultList());
        atualizaHora = new org.netbeans.examples.lib.timerbean.Timer();
        listEnderecoCliente = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryCliente.getResultList());
        listCliente = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryCliente.getResultList());
        queryFuncionario = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT f FROM Funcionario f");
        listFuncionario = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryFuncionario.getResultList());
        lacoFunc = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryFuncionario.getResultList());
        listLocal1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryDiariafunc.getResultList());
        listLocal2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryDiariafunc.getResultList());
        listDiariaCadastro = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryDiariafunc.getResultList());
        BTGRegioes = new javax.swing.ButtonGroup();
        TabelaPedidos = new javax.swing.JTabbedPane();
        ABAConsulta = new javax.swing.JPanel();
        Filtros = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        BOTFiltraData = new javax.swing.JButton();
        BOTFiltraAtivos = new javax.swing.JButton();
        pTampar = new javax.swing.JPanel();
        configExibicao = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        RBTTerminados = new javax.swing.JRadioButton();
        RBTNaoTerminados = new javax.swing.JRadioButton();
        RBTTodos = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        EDIDe = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        EDIAte = new javax.swing.JTextField();
        BOTFiltrar = new javax.swing.JButton();
        Tabela = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        Pesquisar = new javax.swing.JPanel();
        TEXPesquisa = new javax.swing.JLabel();
        EDIPesquisa = new javax.swing.JTextField();
        BOTFinalizarPedido = new javax.swing.JButton();
        BOTLocalFuncionario = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Botoes = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        BOTEditar = new javax.swing.JButton();
        BOTRelatorio = new javax.swing.JButton();
        ABACadastro = new javax.swing.JPanel();
        Campos = new javax.swing.JPanel();
        Atual = new javax.swing.JPanel();
        cidadeatualLabel = new javax.swing.JLabel();
        enderecoatualLabel = new javax.swing.JLabel();
        referenciaLabel = new javax.swing.JLabel();
        enderecoatualField = new javax.swing.JTextField();
        bairroatualField = new javax.swing.JTextField();
        bairroatualLabel = new javax.swing.JLabel();
        referenciaField = new javax.swing.JTextField();
        cidadeatualField = new javax.swing.JTextField();
        Destino = new javax.swing.JPanel();
        cidadedestinoLabel = new javax.swing.JLabel();
        bairrodestinoField = new javax.swing.JTextField();
        numerocasadestinoField = new javax.swing.JTextField();
        enderecodestinoLabel = new javax.swing.JLabel();
        numerocasadestinoLabel = new javax.swing.JLabel();
        enderecodestinoField = new javax.swing.JTextField();
        bairrodestinoLabel = new javax.swing.JLabel();
        cidadedestinoField = new javax.swing.JTextField();
        BOTImportarEndereco = new javax.swing.JButton();
        BOTSalvarEndereco = new javax.swing.JButton();
        Datas = new javax.swing.JPanel();
        distanciacorridaField = new javax.swing.JTextField();
        EDIHoraFinalizacao = new javax.swing.JFormattedTextField();
        distanciacorridaLabel = new javax.swing.JLabel();
        horapedidoLabel = new javax.swing.JLabel();
        precocorridaLabel = new javax.swing.JLabel();
        datapedidoLabel = new javax.swing.JLabel();
        EDIHoraPedido = new javax.swing.JFormattedTextField();
        EDIDataPedido = new javax.swing.JFormattedTextField();
        EDIPrecoCorrida = new javax.swing.JFormattedTextField();
        horafinalizacaoLabel = new javax.swing.JLabel();
        PainelDataAtual = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        BOTAplicarData = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        TEXData = new javax.swing.JLabel();
        TEXHora = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        CHBDataPedido = new javax.swing.JCheckBox();
        CHBHoraPedido = new javax.swing.JCheckBox();
        BOTAplicar = new javax.swing.JButton();
        TEXSituacao = new javax.swing.JLabel();
        CBXSituacao = new javax.swing.JComboBox();
        BotoesCadastro = new javax.swing.JPanel();
        coddiariafuncLabel = new javax.swing.JLabel();
        CBXCodFuncionario = new javax.swing.JComboBox();
        codclienteLabel = new javax.swing.JLabel();
        CBXCodCliente = new javax.swing.JComboBox();
        RBTRegiaoUm = new javax.swing.JRadioButton();
        RBTRegiaoDois = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        CBXTipoVei = new javax.swing.JComboBox();
        BOTFiltrarFuncionarios = new javax.swing.JButton();
        RBTQualquerUm = new javax.swing.JRadioButton();
        BOTSalvar = new javax.swing.JButton();
        BOTCancealr = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Locais = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBLTodasDiarias = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        BOTTransferirDois = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TBLLocalDois = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBLLcoalUm = new javax.swing.JTable();
        TEXRegiao1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        BOTGerenciarPedidos = new javax.swing.JButton();
        Impressao = new javax.swing.JPanel();
        PainelImpresao = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        BOTImprimir2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        folha = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        rowSorterToStringConverter1.setTable(masterTable);

        unidadeListCellRendererDiariaFuncionario1.setText("unidadeListCellRendererDiariaFuncionario1");

        unidadeListCellRendererCliente1.setText("unidadeListCellRendererCliente1");

        atualizaHora.addTimerListener(formListener);

        setLayout(null);

        TabelaPedidos.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        ABAConsulta.setLayout(null);

        Filtros.setLayout(null);

        BOTFiltraData.setText("Filtrar por Data");
        BOTFiltraData.addActionListener(formListener);

        BOTFiltraAtivos.setText("Filtrar por Ativos");
        BOTFiltraAtivos.addActionListener(formListener);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BOTFiltraData)
                    .addComponent(BOTFiltraAtivos))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(BOTFiltraData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BOTFiltraAtivos)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        Filtros.add(jPanel7);
        jPanel7.setBounds(330, 10, 140, 111);

        javax.swing.GroupLayout pTamparLayout = new javax.swing.GroupLayout(pTampar);
        pTampar.setLayout(pTamparLayout);
        pTamparLayout.setHorizontalGroup(
            pTamparLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );
        pTamparLayout.setVerticalGroup(
            pTamparLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        Filtros.add(pTampar);
        pTampar.setBounds(320, 30, 70, 70);

        configExibicao.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        configExibicao.setRequestFocusEnabled(false);

        selecaoSituacao.add(RBTTerminados);
        RBTTerminados.setText("Finalizados");
        RBTTerminados.addItemListener(formListener);

        selecaoSituacao.add(RBTNaoTerminados);
        RBTNaoTerminados.setText("Andamento");
        RBTNaoTerminados.addItemListener(formListener);

        selecaoSituacao.add(RBTTodos);
        RBTTodos.setText("Todos");
        RBTTodos.addItemListener(formListener);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(RBTNaoTerminados)
                .addGap(30, 30, 30)
                .addComponent(RBTTerminados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(RBTTodos)
                .addGap(34, 34, 34))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBTTodos)
                    .addComponent(RBTNaoTerminados)
                    .addComponent(RBTTerminados))
                .addGap(19, 19, 19))
        );

        configExibicao.addTab("Radio", jPanel6);

        jLabel7.setText("De");

        jLabel8.setText("a :");

        BOTFiltrar.setText("Filtrar");
        BOTFiltrar.addActionListener(formListener);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EDIDe, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EDIAte, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BOTFiltrar)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(BOTFiltrar)
                    .addComponent(EDIDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EDIAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        configExibicao.addTab("Data", jPanel5);

        Filtros.add(configExibicao);
        configExibicao.setBounds(10, 30, 380, 70);

        ABAConsulta.add(Filtros);
        Filtros.setBounds(40, 50, 470, 110);

        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listPedidosTodos, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${situacao}"));
        columnBinding.setColumnName("Situação");
        columnBinding.setColumnClass(Character.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${coddiariafunc.localcorrida}"));
        columnBinding.setColumnName("Local");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${coddiariafunc.codfunc.nomefunc}"));
        columnBinding.setColumnName("Diaria Funcionario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codcliente.nomecli}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${referencia}"));
        columnBinding.setColumnName("Referência");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${enderecoatual}"));
        columnBinding.setColumnName("Endereço Atual");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cidadeatual}"));
        columnBinding.setColumnName("Cidade Atual");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bairroatual}"));
        columnBinding.setColumnName("Bairro Atual");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cidadedestino}"));
        columnBinding.setColumnName("Cidade Destino");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${enderecodestino}"));
        columnBinding.setColumnName("Endereço Destino");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numerocasadestino}"));
        columnBinding.setColumnName("Número Casa Destino");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bairrodestino}"));
        columnBinding.setColumnName("Bairro Destino");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datapedido}"));
        columnBinding.setColumnName("Data Pedido");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horapedido}"));
        columnBinding.setColumnName("Hora Pedido");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horafinalizacao}"));
        columnBinding.setColumnName("Hora Finalização");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${distanciacorrida}"));
        columnBinding.setColumnName("Distância Corrida");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precocorrida}"));
        columnBinding.setColumnName("Preço Corrida");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        masterTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(8).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(9).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(10).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(11).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(12).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(13).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(14).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(15).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(16).setPreferredWidth(100);

        TEXPesquisa.setText("Pesquisar :");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), EDIPesquisa, org.jdesktop.beansbinding.BeanProperty.create("text"), "");
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout PesquisarLayout = new javax.swing.GroupLayout(Pesquisar);
        Pesquisar.setLayout(PesquisarLayout);
        PesquisarLayout.setHorizontalGroup(
            PesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TEXPesquisa)
                .addGap(18, 18, 18)
                .addComponent(EDIPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );
        PesquisarLayout.setVerticalGroup(
            PesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PesquisarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TEXPesquisa)
                    .addComponent(EDIPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        BOTFinalizarPedido.setText("Finalizar Pedido");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), BOTFinalizarPedido, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        BOTFinalizarPedido.addActionListener(formListener);

        BOTLocalFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_CarroFerramenta.png"))); // NOI18N
        BOTLocalFuncionario.setText("Local Funcionario");
        BOTLocalFuncionario.addActionListener(formListener);

        javax.swing.GroupLayout TabelaLayout = new javax.swing.GroupLayout(Tabela);
        Tabela.setLayout(TabelaLayout);
        TabelaLayout.setHorizontalGroup(
            TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaLayout.createSequentialGroup()
                .addGroup(TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TabelaLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BOTFinalizarPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BOTLocalFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TabelaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TabelaLayout.setVerticalGroup(
            TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BOTFinalizarPedido)
                        .addComponent(BOTLocalFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        ABAConsulta.add(Tabela);
        Tabela.setBounds(10, 165, 910, 400);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/taxi_amarelo_da_nova_iorque_escultura_de_fotos-p153895501366078914b2do9_400.png"))); // NOI18N
        ABAConsulta.add(jLabel1);
        jLabel1.setBounds(470, 30, 390, 380);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_salvar.png"))); // NOI18N
        saveButton.setText("Salvar");
        saveButton.addActionListener(formListener);

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_atualiza.gif"))); // NOI18N
        refreshButton.setText("Atualizar");
        refreshButton.addActionListener(formListener);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_adicionar.png"))); // NOI18N
        newButton.setText("Incluir");
        newButton.addActionListener(formListener);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_excluir.gif"))); // NOI18N
        deleteButton.setText("Excluir");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        BOTEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_editar.png"))); // NOI18N
        BOTEditar.setText("Editar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), BOTEditar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        BOTEditar.addActionListener(formListener);

        BOTRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_impressora.png"))); // NOI18N
        BOTRelatorio.setText("Relatorio");

        javax.swing.GroupLayout BotoesLayout = new javax.swing.GroupLayout(Botoes);
        Botoes.setLayout(BotoesLayout);
        BotoesLayout.setHorizontalGroup(
            BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BOTEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BOTRelatorio)
                .addGap(112, 112, 112))
        );

        BotoesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton, refreshButton, saveButton});

        BotoesLayout.setVerticalGroup(
            BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BOTEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BOTRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ABAConsulta.add(Botoes);
        Botoes.setBounds(10, 0, 750, 52);

        TabelaPedidos.addTab("Consulta", ABAConsulta);

        ABACadastro.setLayout(null);

        Atual.setBorder(javax.swing.BorderFactory.createTitledBorder("Atual"));

        cidadeatualLabel.setText("Cidade :");

        enderecoatualLabel.setText("Endereço :");

        referenciaLabel.setText("Referencia:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.enderecoatual}"), enderecoatualField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), enderecoatualField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.bairroatual}"), bairroatualField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), bairroatualField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        bairroatualLabel.setText("Bairro :");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.referencia}"), referenciaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), referenciaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.cidadeatual}"), cidadeatualField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), cidadeatualField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout AtualLayout = new javax.swing.GroupLayout(Atual);
        Atual.setLayout(AtualLayout);
        AtualLayout.setHorizontalGroup(
            AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AtualLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(referenciaLabel)
                    .addComponent(enderecoatualLabel)
                    .addComponent(cidadeatualLabel)
                    .addComponent(bairroatualLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(referenciaField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(bairroatualField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cidadeatualField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(enderecoatualField, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addContainerGap())
        );
        AtualLayout.setVerticalGroup(
            AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AtualLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(referenciaLabel)
                    .addComponent(referenciaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enderecoatualLabel)
                    .addComponent(enderecoatualField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cidadeatualLabel)
                    .addComponent(cidadeatualField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bairroatualLabel)
                    .addComponent(bairroatualField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Destino.setBorder(javax.swing.BorderFactory.createTitledBorder("Destino"));

        cidadedestinoLabel.setText("Cidade :");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.bairrodestino}"), bairrodestinoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), bairrodestinoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.numerocasadestino}"), numerocasadestinoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), numerocasadestinoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        enderecodestinoLabel.setText("Endereço :");

        numerocasadestinoLabel.setText("Numero Casa :");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.enderecodestino}"), enderecodestinoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), enderecodestinoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        bairrodestinoLabel.setText("Bairro :");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.cidadedestino}"), cidadedestinoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), cidadedestinoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        BOTImportarEndereco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/busca casa.png"))); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, CBXCodCliente, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), BOTImportarEndereco, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        BOTImportarEndereco.addActionListener(formListener);

        BOTSalvarEndereco.setText("Salvar Endereço");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, CBXCodCliente, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), BOTSalvarEndereco, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        BOTSalvarEndereco.addActionListener(formListener);

        javax.swing.GroupLayout DestinoLayout = new javax.swing.GroupLayout(Destino);
        Destino.setLayout(DestinoLayout);
        DestinoLayout.setHorizontalGroup(
            DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DestinoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DestinoLayout.createSequentialGroup()
                        .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enderecodestinoLabel)
                            .addComponent(numerocasadestinoLabel)
                            .addComponent(bairrodestinoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(DestinoLayout.createSequentialGroup()
                        .addComponent(cidadedestinoLabel)
                        .addGap(35, 35, 35)))
                .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numerocasadestinoField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enderecodestinoField)
                    .addComponent(cidadedestinoField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(bairrodestinoField))
                .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DestinoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BOTSalvarEndereco))
                    .addGroup(DestinoLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(BOTImportarEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        DestinoLayout.setVerticalGroup(
            DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DestinoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DestinoLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(BOTImportarEndereco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BOTSalvarEndereco))
                    .addGroup(DestinoLayout.createSequentialGroup()
                        .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cidadedestinoLabel)
                            .addComponent(cidadedestinoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enderecodestinoLabel)
                            .addComponent(enderecodestinoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numerocasadestinoLabel)
                            .addComponent(numerocasadestinoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bairrodestinoLabel)
                            .addComponent(bairrodestinoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Datas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.distanciacorrida}"), distanciacorridaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), distanciacorridaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        EDIHoraFinalizacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.horafinalizacao}"), EDIHoraFinalizacao, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), EDIHoraFinalizacao, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        distanciacorridaLabel.setText("Distância da Corrida :");

        horapedidoLabel.setText("Hora Finalização :");

        precocorridaLabel.setText("Preço da Corrida :");

        datapedidoLabel.setText("Data Pedido :");

        EDIHoraPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.horapedido}"), EDIHoraPedido, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), EDIHoraPedido, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        EDIDataPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.datapedido}"), EDIDataPedido, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), EDIDataPedido, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        EDIPrecoCorrida.setBackground(new java.awt.Color(255, 204, 204));
        EDIPrecoCorrida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0.00"))));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.precocorrida}"), EDIPrecoCorrida, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), EDIPrecoCorrida, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        EDIPrecoCorrida.addFocusListener(formListener);

        horafinalizacaoLabel.setText("Hora Pedido :");

        PainelDataAtual.setTabPlacement(javax.swing.JTabbedPane.RIGHT);

        BOTAplicarData.setText("Aplicar Data");
        BOTAplicarData.addActionListener(formListener);

        TEXData.setText("12/12/2012");

        TEXHora.setText("12:12");

        jLabel6.setText("Data :");

        jLabel9.setText("Hora :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(TEXHora))
                    .addComponent(TEXData, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TEXData)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TEXHora)
                    .addComponent(jLabel9)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BOTAplicarData)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(BOTAplicarData)
                .addGap(27, 27, 27))
        );

        PainelDataAtual.addTab("main", jPanel1);

        jLabel3.setText("Aplicar data Atual a:");

        CHBDataPedido.setText("Data Do Pedido");

        CHBHoraPedido.setText("Hora do Pedido");

        BOTAplicar.setText("Aplicar");
        BOTAplicar.addActionListener(formListener);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(CHBDataPedido)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(BOTAplicar)
                            .addGap(34, 34, 34))
                        .addComponent(CHBHoraPedido))
                    .addComponent(jLabel3))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addComponent(CHBDataPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CHBHoraPedido)
                .addGap(17, 17, 17)
                .addComponent(BOTAplicar)
                .addGap(60, 60, 60))
        );

        PainelDataAtual.addTab("Escolhe", jPanel2);

        TEXSituacao.setText("Situação :");

        CBXSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Ativo", "Inativo" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.situacao}"), CBXSituacao, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout DatasLayout = new javax.swing.GroupLayout(Datas);
        Datas.setLayout(DatasLayout);
        DatasLayout.setHorizontalGroup(
            DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DatasLayout.createSequentialGroup()
                        .addComponent(TEXSituacao)
                        .addGap(18, 18, 18)
                        .addComponent(CBXSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DatasLayout.createSequentialGroup()
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datapedidoLabel)
                            .addComponent(horafinalizacaoLabel)
                            .addComponent(horapedidoLabel)
                            .addComponent(distanciacorridaLabel)
                            .addComponent(precocorridaLabel))
                        .addGap(22, 22, 22)
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(EDIHoraFinalizacao, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EDIHoraPedido, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EDIDataPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(distanciacorridaField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EDIPrecoCorrida, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(PainelDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        DatasLayout.setVerticalGroup(
            DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PainelDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DatasLayout.createSequentialGroup()
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TEXSituacao)
                            .addComponent(CBXSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datapedidoLabel)
                            .addComponent(EDIDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(horafinalizacaoLabel)
                            .addComponent(EDIHoraPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(horapedidoLabel)
                            .addComponent(EDIHoraFinalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(distanciacorridaLabel)
                            .addComponent(distanciacorridaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precocorridaLabel)
                            .addComponent(EDIPrecoCorrida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        coddiariafuncLabel.setText("Funcionario :");

        CBXCodFuncionario.setRenderer(unidadeListCellRendererDiariaFuncionario1);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listDiariaCadastro, CBXCodFuncionario);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.coddiariafunc}"), CBXCodFuncionario, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        CBXCodFuncionario.addItemListener(formListener);
        CBXCodFuncionario.addActionListener(formListener);

        codclienteLabel.setText("Cliente :");

        CBXCodCliente.setRenderer(unidadeListCellRendererCliente1);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listClienteTodos, CBXCodCliente);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codcliente}"), CBXCodCliente, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        BTGRegioes.add(RBTRegiaoUm);
        RBTRegiaoUm.setText("Região 1");
        RBTRegiaoUm.addItemListener(formListener);
        RBTRegiaoUm.addActionListener(formListener);

        BTGRegioes.add(RBTRegiaoDois);
        RBTRegiaoDois.setText("Região 2");
        RBTRegiaoDois.addItemListener(formListener);

        jLabel4.setText("Tipo de Veiculo");

        CBXTipoVei.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Carro", "Moto" }));
        CBXTipoVei.addItemListener(formListener);

        BOTFiltrarFuncionarios.setText("Filtrar");
        BOTFiltrarFuncionarios.addActionListener(formListener);

        BTGRegioes.add(RBTQualquerUm);
        RBTQualquerUm.setText("Qualquer Região");
        RBTQualquerUm.addItemListener(formListener);

        BOTSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_salvar.png"))); // NOI18N
        BOTSalvar.setText("Salvar");
        BOTSalvar.addActionListener(formListener);

        BOTCancealr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_excluir.gif"))); // NOI18N
        BOTCancealr.setText("Cancelar");
        BOTCancealr.addActionListener(formListener);

        javax.swing.GroupLayout BotoesCadastroLayout = new javax.swing.GroupLayout(BotoesCadastro);
        BotoesCadastro.setLayout(BotoesCadastroLayout);
        BotoesCadastroLayout.setHorizontalGroup(
            BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoesCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BotoesCadastroLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CBXTipoVei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RBTRegiaoUm)
                        .addGap(8, 8, 8)
                        .addComponent(RBTRegiaoDois)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RBTQualquerUm)
                        .addGap(43, 43, 43)
                        .addComponent(BOTFiltrarFuncionarios)
                        .addGap(26, 26, 26)
                        .addComponent(BOTSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BOTCancealr)
                        .addContainerGap())
                    .addGroup(BotoesCadastroLayout.createSequentialGroup()
                        .addComponent(coddiariafuncLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CBXCodFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addComponent(codclienteLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CBXCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))))
        );
        BotoesCadastroLayout.setVerticalGroup(
            BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoesCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CBXTipoVei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBTRegiaoDois)
                    .addComponent(RBTRegiaoUm)
                    .addComponent(RBTQualquerUm)
                    .addComponent(BOTFiltrarFuncionarios)
                    .addComponent(BOTSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BOTCancealr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(coddiariafuncLabel)
                        .addComponent(CBXCodFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BotoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(codclienteLabel)
                        .addComponent(CBXCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout CamposLayout = new javax.swing.GroupLayout(Campos);
        Campos.setLayout(CamposLayout);
        CamposLayout.setHorizontalGroup(
            CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Datas, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CamposLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(BotoesCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CamposLayout.createSequentialGroup()
                        .addComponent(Atual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Destino, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CamposLayout.setVerticalGroup(
            CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CamposLayout.createSequentialGroup()
                .addComponent(BotoesCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Atual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Datas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        ABACadastro.add(Campos);
        Campos.setBounds(10, 11, 850, 530);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/taxi.png"))); // NOI18N
        ABACadastro.add(jLabel2);
        jLabel2.setBounds(310, 260, 638, 338);

        TabelaPedidos.addTab("Cadastro", ABACadastro);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listDiariafuncTodos, TBLTodasDiarias);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codfunc.nomefunc}"));
        columnBinding.setColumnName("Funcionario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${localcorrida}"));
        columnBinding.setColumnName("Local");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${situacaoCorrida}"));
        columnBinding.setColumnName("Situacao Corrida");
        columnBinding.setColumnClass(Character.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(TBLTodasDiarias);

        BOTTransferirDois.setText("Transferir");
        BOTTransferirDois.addActionListener(formListener);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listLocal2, TBLLocalDois);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codfunc.nomefunc}"));
        columnBinding.setColumnName("Funcionario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codveiculo.nomevei}"));
        columnBinding.setColumnName("Veiculo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        TBLLocalDois.addMouseListener(formListener);
        jScrollPane3.setViewportView(TBLLocalDois);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listLocal1, TBLLcoalUm);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codfunc.nomefunc}"));
        columnBinding.setColumnName("Funcionario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codveiculo.nomevei}"));
        columnBinding.setColumnName("Veiculo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        TBLLcoalUm.addMouseListener(formListener);
        jScrollPane2.setViewportView(TBLLcoalUm);

        TEXRegiao1.setText("Funcionarios da Região Um");

        jLabel5.setText("Funcionarios da Região Dois");

        BOTGerenciarPedidos.setText("Gerenciar de Pedidos");
        BOTGerenciarPedidos.addActionListener(formListener);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(TEXRegiao1)
                        .addGap(140, 140, 140)
                        .addComponent(jLabel5)
                        .addGap(61, 61, 61)))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addComponent(BOTTransferirDois)
                .addGap(224, 224, 224))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(BOTGerenciarPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BOTGerenciarPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(BOTTransferirDois)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TEXRegiao1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout LocaisLayout = new javax.swing.GroupLayout(Locais);
        Locais.setLayout(LocaisLayout);
        LocaisLayout.setHorizontalGroup(
            LocaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LocaisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        LocaisLayout.setVerticalGroup(
            LocaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LocaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        TabelaPedidos.addTab("Tranasferencia", Locais);

        BOTImprimir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/ico_impressora.png"))); // NOI18N
        BOTImprimir2.setText("Imprimir");
        BOTImprimir2.addActionListener(formListener);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        jButton2.setText("Cancelar Impresão");
        jButton2.addActionListener(formListener);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(506, Short.MAX_VALUE)
                .addComponent(BOTImprimir2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(186, 186, 186))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BOTImprimir2)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        PainelImpresao.addTab("Propriedades", jPanel10);

        jScrollPane4.setViewportView(folha);

        jButton3.setText("Voltar");
        jButton3.addActionListener(formListener);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(494, Short.MAX_VALUE))
        );

        PainelImpresao.addTab("Imprensao", jPanel12);

        javax.swing.GroupLayout ImpressaoLayout = new javax.swing.GroupLayout(Impressao);
        Impressao.setLayout(ImpressaoLayout);
        ImpressaoLayout.setHorizontalGroup(
            ImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PainelImpresao, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
        );
        ImpressaoLayout.setVerticalGroup(
            ImpressaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PainelImpresao, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );

        TabelaPedidos.addTab("Impressao", Impressao);

        add(TabelaPedidos);
        TabelaPedidos.setBounds(0, 0, 930, 640);

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener, java.awt.event.MouseListener, org.netbeans.examples.lib.timerbean.TimerListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == BOTFiltraData) {
                PedidoTaxiView.this.BOTFiltraDataActionPerformed(evt);
            }
            else if (evt.getSource() == BOTFiltraAtivos) {
                PedidoTaxiView.this.BOTFiltraAtivosActionPerformed(evt);
            }
            else if (evt.getSource() == BOTFiltrar) {
                PedidoTaxiView.this.BOTFiltrarActionPerformed(evt);
            }
            else if (evt.getSource() == BOTFinalizarPedido) {
                PedidoTaxiView.this.BOTFinalizarPedidoActionPerformed(evt);
            }
            else if (evt.getSource() == BOTLocalFuncionario) {
                PedidoTaxiView.this.BOTLocalFuncionarioActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                PedidoTaxiView.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                PedidoTaxiView.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                PedidoTaxiView.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                PedidoTaxiView.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == BOTEditar) {
                PedidoTaxiView.this.BOTEditarActionPerformed(evt);
            }
            else if (evt.getSource() == BOTImportarEndereco) {
                PedidoTaxiView.this.BOTImportarEnderecoActionPerformed(evt);
            }
            else if (evt.getSource() == BOTSalvarEndereco) {
                PedidoTaxiView.this.BOTSalvarEnderecoActionPerformed(evt);
            }
            else if (evt.getSource() == BOTAplicarData) {
                PedidoTaxiView.this.BOTAplicarDataActionPerformed(evt);
            }
            else if (evt.getSource() == BOTAplicar) {
                PedidoTaxiView.this.BOTAplicarActionPerformed(evt);
            }
            else if (evt.getSource() == CBXCodFuncionario) {
                PedidoTaxiView.this.CBXCodFuncionarioActionPerformed(evt);
            }
            else if (evt.getSource() == RBTRegiaoUm) {
                PedidoTaxiView.this.RBTRegiaoUmActionPerformed(evt);
            }
            else if (evt.getSource() == BOTFiltrarFuncionarios) {
                PedidoTaxiView.this.BOTFiltrarFuncionariosActionPerformed(evt);
            }
            else if (evt.getSource() == BOTSalvar) {
                PedidoTaxiView.this.BOTSalvarActionPerformed(evt);
            }
            else if (evt.getSource() == BOTCancealr) {
                PedidoTaxiView.this.BOTCancealrActionPerformed(evt);
            }
            else if (evt.getSource() == BOTTransferirDois) {
                PedidoTaxiView.this.BOTTransferirDoisActionPerformed(evt);
            }
            else if (evt.getSource() == BOTGerenciarPedidos) {
                PedidoTaxiView.this.BOTGerenciarPedidosActionPerformed(evt);
            }
            else if (evt.getSource() == BOTImprimir2) {
                PedidoTaxiView.this.BOTImprimir2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                PedidoTaxiView.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                PedidoTaxiView.this.jButton3ActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == EDIPrecoCorrida) {
                PedidoTaxiView.this.EDIPrecoCorridaFocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == EDIPrecoCorrida) {
                PedidoTaxiView.this.EDIPrecoCorridaFocusLost(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == RBTTerminados) {
                PedidoTaxiView.this.RBTTerminadosItemStateChanged(evt);
            }
            else if (evt.getSource() == RBTNaoTerminados) {
                PedidoTaxiView.this.RBTNaoTerminadosItemStateChanged(evt);
            }
            else if (evt.getSource() == RBTTodos) {
                PedidoTaxiView.this.RBTTodosItemStateChanged(evt);
            }
            else if (evt.getSource() == CBXCodFuncionario) {
                PedidoTaxiView.this.CBXCodFuncionarioItemStateChanged(evt);
            }
            else if (evt.getSource() == RBTRegiaoUm) {
                PedidoTaxiView.this.RBTRegiaoUmItemStateChanged(evt);
            }
            else if (evt.getSource() == RBTRegiaoDois) {
                PedidoTaxiView.this.RBTRegiaoDoisItemStateChanged(evt);
            }
            else if (evt.getSource() == CBXTipoVei) {
                PedidoTaxiView.this.CBXTipoVeiItemStateChanged(evt);
            }
            else if (evt.getSource() == RBTQualquerUm) {
                PedidoTaxiView.this.RBTQualquerUmItemStateChanged(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == TBLLocalDois) {
                PedidoTaxiView.this.clearSelections(evt);
            }
            else if (evt.getSource() == TBLLcoalUm) {
                PedidoTaxiView.this.justOne(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }

        public void onTime(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == atualizaHora) {
                PedidoTaxiView.this.horaAtualiza(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = queryPedidos.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        listPedidosTodos.clear();
        listPedidosTodos.addAll(data);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<sys.taxi.com.br.bean.Pedidostaxi> toRemove = new ArrayList<sys.taxi.com.br.bean.Pedidostaxi>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            sys.taxi.com.br.bean.Pedidostaxi p = listPedidosTodos.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(p);
            entityManager.remove(p);
        }
        listPedidosTodos.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        atualizaHora.start();
        atualizaPedidosTaxi();
        //funcionariosAtivos();
        
        EDIPesquisa.setText("");
        TabelaPedidos.setSelectedIndex(1);
        sys.taxi.com.br.bean.Pedidostaxi p = new sys.taxi.com.br.bean.Pedidostaxi();
        entityManager.persist(p);
        listPedidosTodos.add(p);
        int row = listPedidosTodos.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        EDIDataPedido.setValue(new java.util.Date());
        CBXSituacao.setSelectedItem("Ativo");
        //sys.taxi.com.all.util.Data agora = new sys.taxi.com.all.util.Data();
        //masterTable.setValueAt(agora.dataAtual, masterTable.getSelectedRow(), 11);
        //masterTable.setValueAt(agora.dataAtual, masterTable.getSelectedRow(), 12);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));

    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sys.taxi.com.br.bean.Pedidostaxi> merged = new ArrayList<sys.taxi.com.br.bean.Pedidostaxi>(listPedidosTodos.size());
            for (sys.taxi.com.br.bean.Pedidostaxi p : listPedidosTodos) {
                merged.add(entityManager.merge(p));
            }
            listPedidosTodos.clear();
            listPedidosTodos.addAll(merged);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

private void BOTSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTSalvarActionPerformed
        sys.taxi.com.br.bean.Pedidostaxi pd = listPedidosTodos.get(masterTable.getSelectedRow());
    if (CBXSituacao.getSelectedItem() ==  "Ativo"){
        pd.setSituacao('S');
    }else{if(CBXSituacao.getSelectedItem() ==  "Inativo"){
        pd.setSituacao('N');
    }else{
        JOptionPane.showMessageDialog(null, "Insira um tipo de situação!");
    }
    }
    saveButton.doClick();
    TabelaPedidos.setSelectedIndex(0);
    atualizaHora.stop();
}//GEN-LAST:event_BOTSalvarActionPerformed

private void BOTCancealrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTCancealrActionPerformed
    refreshButton.doClick();
    TabelaPedidos.setSelectedIndex(0);
    atualizaHora.stop();
}//GEN-LAST:event_BOTCancealrActionPerformed

private void BOTFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTFiltrarActionPerformed
    selecaoSituacao.clearSelection();
    if (EDIDe.getText().equals("") && EDIAte.getText().equals("")) {
        queryPedidos = entityManager.createNamedQuery("Pedidostaxi.findAll");
        Collection todosDados = queryPedidos.getResultList();
        listPedidosTodos.clear();
        listPedidosTodos.addAll(todosDados);
    } else {

        Date ini = null;
        Date fim = null;
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            ini = formato.parse(EDIDe.getText());
            fim = formato.parse(EDIAte.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro :" + e, "Problemas Com Data", 3);
        }
        queryPedidos = entityManager.createNamedQuery("Pedidostaxi.findBetweendatapedido");
        queryPedidos.setParameter("dataini", ini);
        queryPedidos.setParameter("datafim", fim);

        Collection dadosRestposta = queryPedidos.getResultList();
        listPedidosTodos.clear();
        listPedidosTodos.addAll(dadosRestposta);
    }

}//GEN-LAST:event_BOTFiltrarActionPerformed

private void RBTTerminadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RBTTerminadosItemStateChanged
//atualizaTabelaRBT();
    queryPedidos = entityManager.createNamedQuery("Pedidostaxi.findBySituacao");
    queryPedidos.setParameter("situacao", 'N');

    Collection conteudoN = queryPedidos.getResultList();
    listPedidosTodos.clear();
    listPedidosTodos.addAll(conteudoN);
}//GEN-LAST:event_RBTTerminadosItemStateChanged

private void RBTNaoTerminadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RBTNaoTerminadosItemStateChanged
//atualizaTabelaRBT();
    queryPedidos = entityManager.createNamedQuery("Pedidostaxi.findBySituacao");
    queryPedidos.setParameter("situacao", 'S');
    Collection conteudoS = queryPedidos.getResultList();
    listPedidosTodos.clear();
    listPedidosTodos.addAll(conteudoS);
}//GEN-LAST:event_RBTNaoTerminadosItemStateChanged

private void RBTTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RBTTodosItemStateChanged
    queryPedidos = entityManager.createNamedQuery("Pedidostaxi.findAll");
    Collection todosDados = queryPedidos.getResultList();
    listPedidosTodos.clear();
    listPedidosTodos.addAll(todosDados);
}//GEN-LAST:event_RBTTodosItemStateChanged

private void BOTFiltraDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTFiltraDataActionPerformed
    configExibicao.setSelectedIndex(1);
}//GEN-LAST:event_BOTFiltraDataActionPerformed

private void BOTFiltraAtivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTFiltraAtivosActionPerformed
    configExibicao.setSelectedIndex(0);
}//GEN-LAST:event_BOTFiltraAtivosActionPerformed

private void BOTEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTEditarActionPerformed
    sys.taxi.com.br.bean.Pedidostaxi pd = listPedidosTodos.get(masterTable.getSelectedRow());
    atualizaPedidosTaxi();
    funcionariosAtivos();
    if (pd.getSituacao() == 'S'){
        CBXSituacao.setSelectedItem("Ativo");
    }else{if(pd.getSituacao() == 'N'){
        CBXSituacao.setSelectedItem("Inativo");
    }}
    
    TabelaPedidos.setSelectedIndex(1);
    atualizaHora.start();
}//GEN-LAST:event_BOTEditarActionPerformed

private void BOTImportarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTImportarEnderecoActionPerformed

    //aqui eu estou capturando o codigo do cliente selecionado.
    dadosCampo = "" + CBXCodCliente.getSelectedItem();
    dadosCampo = dadosCampo.substring((dadosCampo.indexOf("=") + 1), (dadosCampo.indexOf("]") - 1));

    testeTamanho = entityManager.createNamedQuery("Enderecocli.findByCodigocliente");
    testeTamanho.setParameter("codigocliente", Integer.valueOf(dadosCampo));
    Collection teste = testeTamanho.getResultList();
    if (teste.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Este Cliente não possui endereços cadastrados", "Erro ao buscar endereços", 2);
    } else {
        sys.taxi.com.br.view.DialogBuscaClienteEnderecoView ev = new sys.taxi.com.br.view.DialogBuscaClienteEnderecoView(null, true);
        ev.setRegistroAtual(Integer.valueOf(dadosCampo));
        //buscaEndereco = new DialogBuscaEnderecoCliView(null, true);
        sys.taxi.com.br.bean.Enderecocli ec = new sys.taxi.com.br.bean.Enderecocli();
        ev.dadosCliente(ec);
        ev.setLocationRelativeTo(null);
        ev.setVisible(true);
        bairrodestinoField.setText(ec.getBairrocli());
        enderecodestinoField.setText(ec.getEnderecocli());
        numerocasadestinoField.setText(ec.getNumerocasacli());
        cidadedestinoField.setText(ec.getCidadecli());

    }
}//GEN-LAST:event_BOTImportarEnderecoActionPerformed

private void BOTAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAplicarActionPerformed
//sys.taxi.com.br.bean.Pedidostaxi pdt = list.get(masterTable.getSelectedRow());
    Date agora = new Date();
    if (CHBDataPedido.isSelected()) {
        EDIDataPedido.setValue(agora);
    }
    if (CHBHoraPedido.isSelected()) {
        EDIHoraPedido.setValue(agora);
    }
    PainelDataAtual.setSelectedIndex(0);
}//GEN-LAST:event_BOTAplicarActionPerformed

private void BOTAplicarDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAplicarDataActionPerformed
    PainelDataAtual.setSelectedIndex(1);
}//GEN-LAST:event_BOTAplicarDataActionPerformed

private void horaAtualiza(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaAtualiza
    sys.taxi.com.all.util.Data agora = new sys.taxi.com.all.util.Data();
    agora.leData();
    TEXData.setText(agora.dia + "/" + agora.mes + "/" + agora.ano);
    agora.leHora();
    TEXHora.setText(agora.hora + ":" + agora.minuto + ":" + agora.segundo);

}//GEN-LAST:event_horaAtualiza

private void BOTFinalizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTFinalizarPedidoActionPerformed
    sys.taxi.com.all.util.Data agora = new sys.taxi.com.all.util.Data();
    /* if(masterTable.getValueAt(masterTable.getSelectedRow(), 0).equals('S')){
        masterTable.setValueAt('N', masterTable.getSelectedRow(), 0);
        masterTable.setValueAt(agora.dataAtual, masterTable.getSelectedRow(), 13);
    }else{
    if (masterTable.getValueAt(masterTable.getSelectedRow(), 0).equals('S')) {    
        masterTable.setValueAt(agora.dataAtual, masterTable.getSelectedRow(), 13);
        masterTable.setValueAt('N', masterTable.getSelectedRow(), 0);
    } else {
        JOptionPane.showMessageDialog(null, "Este Pedido ja não esta mais ativo!", "Pedido Já Finalizado", 2);
    }} */
    
    sys.taxi.com.br.bean.Pedidostaxi pt = listPedidosTodos.get(masterTable.getSelectedRow());
    if (pt.getSituacao().equals('S')) {
    pt.setSituacao('N');
    pt.setHorafinalizacao(agora.dataAtual);
    Double valor = Double.valueOf(JOptionPane.showInputDialog(null, "Qual o preço da corrida", "Valor Corrida", 2));
    pt.setPrecocorrida(valor);
    }else{
        JOptionPane.showMessageDialog(null, "Este Pedido ja não esta mais ativo!", "Pedido Já Finalizado", 2);
    }
}//GEN-LAST:event_BOTFinalizarPedidoActionPerformed

private void BOTSalvarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTSalvarEnderecoActionPerformed
    if (!"".equals(cidadedestinoField.getText()) || (!"".equals(bairrodestinoField.getText())) || (!"".equals(enderecodestinoField.getText()))) {
        try {
            sys.taxi.com.br.bean.Pedidostaxi pedidotax = listPedidosTodos.get(masterTable.getSelectedRow());

            for (sys.taxi.com.br.bean.Cliente cliente : listClienteTodos) {
                if (cliente.getCodcliente().equals(pedidotax.getCodcliente().getCodcliente())) {
                    sys.taxi.com.br.bean.Enderecocli ec = new sys.taxi.com.br.bean.Enderecocli();

                    entityManager.persist(ec);
                    listEnderecoCliente.add(ec);

                    ec.setCodcliente(pedidotax.getCodcliente());
                    ec.setBairrocli(bairrodestinoField.getText());
                    ec.setCidadecli(cidadedestinoField.getText());
                    ec.setNumerocasacli(numerocasadestinoField.getText());
                    ec.setEnderecocli(enderecodestinoField.getText());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possivel salvar endereço: " + e);
        }

    } else {
        JOptionPane.showMessageDialog(null, "Os campos de endereço destino não podem estar vazios");
    }

}//GEN-LAST:event_BOTSalvarEnderecoActionPerformed

private void EDIPrecoCorridaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EDIPrecoCorridaFocusLost
    sys.taxi.com.br.bean.Pedidostaxi pt = listPedidosTodos.get(masterTable.getSelectedRow());
    if (EDIPrecoCorrida.getText().equals("R$")) {
        //masterTable.setValueAt("0", masterTable.getSelectedRow(), 15);
        pt.setPrecocorrida(0.0);
        //EDIPrecoipva.setText(null);
    } else {
        if (EDIPrecoCorrida.getText().equals("")) {
            //masterTable.setValueAt("0", masterTable.getSelectedRow(), 15);
            pt.setPrecocorrida(0.0);
        } else {
            //masterTable.setValueAt(EDIPrecoCorrida.getText().replace("R", "0").replace("$", "0"), masterTable.getSelectedRow(), 15);
            pt.setPrecocorrida(Double.valueOf(EDIPrecoCorrida.getText().replace("R", "0").replace("$", "0")));
        }
    }
}//GEN-LAST:event_EDIPrecoCorridaFocusLost

private void EDIPrecoCorridaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EDIPrecoCorridaFocusGained
    if (EDIPrecoCorrida.getText().equals("")) {
        EDIPrecoCorrida.setText("R$");
    }
}//GEN-LAST:event_EDIPrecoCorridaFocusGained

private void CBXCodFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBXCodFuncionarioActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CBXCodFuncionarioActionPerformed

private void RBTRegiaoUmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RBTRegiaoUmItemStateChanged
    /* listDiariaCadastro.clear();
    listDiariaCadastro.addAll(listLocal1); */
    filtroParametros();
}//GEN-LAST:event_RBTRegiaoUmItemStateChanged

private void RBTRegiaoDoisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RBTRegiaoDoisItemStateChanged
    /* listDiariaCadastro.clear();
    listDiariaCadastro.addAll(listLocal2); */
    filtroParametros();
}//GEN-LAST:event_RBTRegiaoDoisItemStateChanged

private void BOTTransferirDoisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTTransferirDoisActionPerformed
    if (TBLLcoalUm.getSelectedRow() > -1) {
        /*sys.taxi.com.br.bean.Diariafunc df = listLocal1.get(TBLLcoalUm.getSelectedRow());
        listLocal1.remove(TBLLcoalUm.getSelectedRow());
        df.setLocalcorrida("P2");
        listLocal2.add(df);*/
        ajustaLocal(listLocal1, "R2", TBLLcoalUm);
    } else {
        if (TBLLocalDois.getSelectedRow() > -1) {
            /*    sys.taxi.com.br.bean.Diariafunc df = listLocal2.get(TBLLocalDois.getSelectedRow());
            listLocal2.remove(TBLLocalDois.getSelectedRow());
            df.setLocalcorrida("P1");
            listLocal1.add(df);*/
            ajustaLocal(listLocal2, "R1", TBLLocalDois);


        } else {
            JOptionPane.showMessageDialog(null, "Não foi selecionado nenhum Funcionario!", "Seleção", 2);
        }
    }

    saveButton.doClick();
    atualizaLocais(listLocal2, "R2");
    atualizaLocais(listLocal1, "R1");
}//GEN-LAST:event_BOTTransferirDoisActionPerformed

private void justOne(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_justOne
    if (TBLLocalDois.getSelectedRow() > -1) {
        TBLLocalDois.clearSelection();
    }
}//GEN-LAST:event_justOne

private void clearSelections(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearSelections
    if (TBLLcoalUm.getSelectedRow() > -1) {
        TBLLcoalUm.clearSelection();
    }
}//GEN-LAST:event_clearSelections

private void BOTFiltrarFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTFiltrarFuncionariosActionPerformed
    filtroParametros();
}//GEN-LAST:event_BOTFiltrarFuncionariosActionPerformed

private void BOTLocalFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTLocalFuncionarioActionPerformed
atualizaLocais(listLocal1, "R1");
atualizaLocais(listLocal2, "R2");
    TabelaPedidos.setSelectedIndex(2);

}//GEN-LAST:event_BOTLocalFuncionarioActionPerformed

private void BOTGerenciarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTGerenciarPedidosActionPerformed
TabelaPedidos.setSelectedIndex(0);
}//GEN-LAST:event_BOTGerenciarPedidosActionPerformed

private void RBTRegiaoUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBTRegiaoUmActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_RBTRegiaoUmActionPerformed

private void CBXTipoVeiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBXTipoVeiItemStateChanged
    //fazendo o teste para ver se existe funcionarios disponiveis com o veiculo escolhido de acordo com a regiao para habilitar os componentes
    char veiculo = 'T';
    //diariafuncionario.add(listDiariaCadastro.get(0));
    if (CBXTipoVei.getSelectedItem() == "Carro"){
            veiculo = 'C';
        }else{if (CBXTipoVei.getSelectedItem() == "Moto"){
            veiculo = 'M';
        }}
    
    
        if ('T' != veiculo){
    queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findByVeiculoRegiao");
    queryDiariafunc.setParameter("tipoveiculo", veiculo);
    queryDiariafunc.setParameter("situacaodiaria", 'S');
    queryDiariafunc.setParameter("situacaocorrida", 'N');
    queryDiariafunc.setParameter("localcorrida", "R1");
    Collection diariafuncionario = queryDiariafunc.getResultList();
    if (diariafuncionario.isEmpty()){
        RBTRegiaoUm.setEnabled(false);
    }else{
        RBTRegiaoUm.setEnabled(true);
    }
    
    
    queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findByVeiculoRegiao");
    queryDiariafunc.setParameter("tipoveiculo", veiculo);
    queryDiariafunc.setParameter("situacaodiaria", 'S');
    queryDiariafunc.setParameter("situacaocorrida", 'N');
    queryDiariafunc.setParameter("localcorrida", "R2");
    diariafuncionario.clear();
    diariafuncionario.addAll(queryDiariafunc.getResultList());
    if (diariafuncionario.isEmpty()){
        RBTRegiaoDois.setEnabled(false);
    }else{
        RBTRegiaoDois.setEnabled(true);
    }
        }else{
            RBTRegiaoDois.setEnabled(true);
            RBTRegiaoUm.setEnabled(true);
        }
        BTGRegioes.clearSelection();
}//GEN-LAST:event_CBXTipoVeiItemStateChanged

private void CBXCodFuncionarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBXCodFuncionarioItemStateChanged

}//GEN-LAST:event_CBXCodFuncionarioItemStateChanged

private void RBTQualquerUmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RBTQualquerUmItemStateChanged
filtroParametros();
}//GEN-LAST:event_RBTQualquerUmItemStateChanged

private void BOTImprimir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTImprimir2ActionPerformed
queryPedidos = entityManager.createNamedQuery("Pedidostaxi.findAll");
        List<sys.taxi.com.br.bean.Pedidostaxi> pedidos = queryPedidos.getResultList();
    
    
PrinterMatrix printer = new PrinterMatrix();
printer.setOutSize( pedidos.size() + 6, 70 );
printer.printCharAtCol( 1, 1, 70, "=" );
printer.printTextLinCol( 2, 1, printer.centralizar(70, "Sistema VGCT - Relatorio de Lucro de caixa"));//42

printer.printCharAtCol( 3, 1, 70, "*" );
printer.printTextLinCol( 4, 1, "Nome Veiculos" );
printer.printTextLinCol( 4, 30, "| Nome Fornecedor" );
printer.printTextLinCol( 4, 48, "| Placa" );
printer.printCharAtCol( 5, 1, 70, "-" );    

int linha = 6;
for (sys.taxi.com.br.bean.Pedidostaxi p : pedidos){
    printer.printTextLinCol( linha, 1, p.getCoddiariafunc().getCodfunc().getNomefunc());
    printer.printTextLinCol( linha, 30,"| "+ p.getCodcliente().getNomecli());
    printer.printTextLinCol( linha, 48,"| "+ p.getDatapedido());
    printer.printCharAtCol(linha+1, 1, 60, "-");
    
    linha++;
    
}


printer.printCharAtCol( linha, 1, 70, "=" );    
printer.toImageFile("src/sys/taxi/com/all/Images/Imprensao/pedidostaxi.jpg");
    
    
            //areaRelatorio.setText(carregaArquivo("veiculos.txt"));
            //areaRelatorio.moveCaretPosition(0);
            //jLabel1.setIcon(new ImageIcon("src/veiculos.jpg"));
            folha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/taxi/com/all/Images/Imprensao/pedidostaxi.jpg")));
        
    PainelImpresao.setSelectedIndex(1);
}//GEN-LAST:event_BOTImprimir2ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
TabelaPedidos.setSelectedIndex(0);
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
TabelaPedidos.setSelectedIndex(0);
PainelImpresao.setSelectedIndex(0);
}//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ABACadastro;
    private javax.swing.JPanel ABAConsulta;
    private javax.swing.JPanel Atual;
    private javax.swing.JButton BOTAplicar;
    private javax.swing.JButton BOTAplicarData;
    private javax.swing.JButton BOTCancealr;
    private javax.swing.JButton BOTEditar;
    private javax.swing.JButton BOTFiltraAtivos;
    private javax.swing.JButton BOTFiltraData;
    private javax.swing.JButton BOTFiltrar;
    private javax.swing.JButton BOTFiltrarFuncionarios;
    private javax.swing.JButton BOTFinalizarPedido;
    private javax.swing.JButton BOTGerenciarPedidos;
    private javax.swing.JButton BOTImportarEndereco;
    private javax.swing.JButton BOTImprimir2;
    private javax.swing.JButton BOTLocalFuncionario;
    private javax.swing.JButton BOTRelatorio;
    private javax.swing.JButton BOTSalvar;
    private javax.swing.JButton BOTSalvarEndereco;
    private javax.swing.JButton BOTTransferirDois;
    private javax.swing.ButtonGroup BTGRegioes;
    private javax.swing.JPanel Botoes;
    private javax.swing.JPanel BotoesCadastro;
    private javax.swing.JComboBox CBXCodCliente;
    private javax.swing.JComboBox CBXCodFuncionario;
    private javax.swing.JComboBox CBXSituacao;
    private javax.swing.JComboBox CBXTipoVei;
    private javax.swing.JCheckBox CHBDataPedido;
    private javax.swing.JCheckBox CHBHoraPedido;
    private javax.swing.JPanel Campos;
    private javax.swing.JPanel Datas;
    private javax.swing.JPanel Destino;
    private javax.swing.JTextField EDIAte;
    private javax.swing.JFormattedTextField EDIDataPedido;
    private javax.swing.JTextField EDIDe;
    private javax.swing.JFormattedTextField EDIHoraFinalizacao;
    private javax.swing.JFormattedTextField EDIHoraPedido;
    private javax.swing.JTextField EDIPesquisa;
    private javax.swing.JFormattedTextField EDIPrecoCorrida;
    private javax.swing.JPanel Filtros;
    private javax.swing.JPanel Impressao;
    private javax.swing.JPanel Locais;
    private javax.swing.JTabbedPane PainelDataAtual;
    private javax.swing.JTabbedPane PainelImpresao;
    private javax.swing.JPanel Pesquisar;
    private javax.swing.JRadioButton RBTNaoTerminados;
    private javax.swing.JRadioButton RBTQualquerUm;
    private javax.swing.JRadioButton RBTRegiaoDois;
    private javax.swing.JRadioButton RBTRegiaoUm;
    private javax.swing.JRadioButton RBTTerminados;
    private javax.swing.JRadioButton RBTTodos;
    private javax.swing.JTable TBLLcoalUm;
    private javax.swing.JTable TBLLocalDois;
    private javax.swing.JTable TBLTodasDiarias;
    private javax.swing.JLabel TEXData;
    private javax.swing.JLabel TEXHora;
    private javax.swing.JLabel TEXPesquisa;
    private javax.swing.JLabel TEXRegiao1;
    private javax.swing.JLabel TEXSituacao;
    private javax.swing.JPanel Tabela;
    private javax.swing.JTabbedPane TabelaPedidos;
    private org.netbeans.examples.lib.timerbean.Timer atualizaHora;
    private javax.swing.JTextField bairroatualField;
    private javax.swing.JLabel bairroatualLabel;
    private javax.swing.JTextField bairrodestinoField;
    private javax.swing.JLabel bairrodestinoLabel;
    private javax.swing.JTextField cidadeatualField;
    private javax.swing.JLabel cidadeatualLabel;
    private javax.swing.JTextField cidadedestinoField;
    private javax.swing.JLabel cidadedestinoLabel;
    private javax.swing.JLabel codclienteLabel;
    private javax.swing.JLabel coddiariafuncLabel;
    private javax.swing.JTabbedPane configExibicao;
    private javax.swing.JLabel datapedidoLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField distanciacorridaField;
    private javax.swing.JLabel distanciacorridaLabel;
    private javax.swing.JTextField enderecoatualField;
    private javax.swing.JLabel enderecoatualLabel;
    private javax.swing.JTextField enderecodestinoField;
    private javax.swing.JLabel enderecodestinoLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel folha;
    private javax.swing.JLabel horafinalizacaoLabel;
    private javax.swing.JLabel horapedidoLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private java.util.List<sys.taxi.com.br.bean.Diariafunc> lacoFunc;
    private java.util.List<sys.taxi.com.br.bean.Cliente> listCliente;
    private java.util.List<sys.taxi.com.br.bean.Cliente> listClienteTodos;
    private java.util.List<sys.taxi.com.br.bean.Diariafunc> listDiariaCadastro;
    private java.util.List<sys.taxi.com.br.bean.Diariafunc> listDiariafuncTodos;
    private java.util.List<sys.taxi.com.br.bean.Enderecocli> listEnderecoCliente;
    private java.util.List<sys.taxi.com.br.bean.Funcionario> listFuncionario;
    private java.util.List<sys.taxi.com.br.bean.Diariafunc> listLocal1;
    private java.util.List<sys.taxi.com.br.bean.Diariafunc> listLocal2;
    private java.util.List<sys.taxi.com.br.bean.Pedidostaxi> listPedidosTodos;
    private java.util.List<sys.taxi.com.br.bean.Enderecocli> listTesteTamanho;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField numerocasadestinoField;
    private javax.swing.JLabel numerocasadestinoLabel;
    private javax.swing.JPanel pTampar;
    private javax.swing.JLabel precocorridaLabel;
    private javax.persistence.Query queryCliente;
    private javax.persistence.Query queryDiariafunc;
    private javax.persistence.Query queryFuncionario;
    private javax.persistence.Query queryPedidos;
    private javax.swing.JTextField referenciaField;
    private javax.swing.JLabel referenciaLabel;
    private javax.swing.JButton refreshButton;
    private sys.taxi.com.all.util.RowSorterToStringConverter rowSorterToStringConverter1;
    private javax.swing.JButton saveButton;
    private javax.swing.ButtonGroup selecaoSituacao;
    private javax.persistence.Query testeTamanho;
    private sys.taxi.com.all.renderer.UnidadeListCellRendererCliente unidadeListCellRendererCliente1;
    private sys.taxi.com.all.renderer.UnidadeListCellRendererDiariaFuncionario unidadeListCellRendererDiariaFuncionario1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public static void main(final String[] args, final String pd) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PedidoTaxiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PedidoTaxiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PedidoTaxiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PedidoTaxiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {

            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new PedidoTaxiView(pd));
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
                frame.setTitle(args[0]);
                frame.setSize(849, 600);
            }
        });
    }

    private void funcionariosAtivos() {
        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findBySituacaodiaria");
        queryDiariafunc.setParameter("situacaodiaria", 'S');
        Collection funcionariosTrabalhando = queryDiariafunc.getResultList();
        listDiariafuncTodos.clear();
        listDiariafuncTodos.addAll(funcionariosTrabalhando);
    }

    private void atualizaPedidosTaxi() {
        queryCliente = entityManager.createNamedQuery("Cliente.findAll");
        Collection atualizadoC = queryCliente.getResultList();
        listClienteTodos.clear();
        listClienteTodos.addAll(atualizadoC);

        /*     
        
        //capturando todas as diarias que estiverem ativas
        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findBySituacaocorrida");
        queryDiariafunc.setParameter("situacaocorrida", 'N');
        List<sys.taxi.com.br.bean.Diariafunc> atualizado = queryDiariafunc.getResultList();
        Collection<sys.taxi.com.br.bean.Diariafunc> listaf = queryDiariafunc.getResultList();
        //capturando todos os funcionarios
        queryFuncionario = entityManager.createNamedQuery("Funcionario.findAll");
        List<sys.taxi.com.br.bean.Funcionario> funcionario = queryFuncionario.getResultList();
        listFuncionario.clear();
        listFuncionario.addAll(funcionario);
        //funcionarioList.clear();        
        int cont = -1;
        
        int cont2 = -1;
        
        //criando um laço que utilizara as diarias ativas para capturar o codigo do funcionario
        
        
        for (sys.taxi.com.br.bean.Diariafunc diaria : atualizado) {
        
        cont = -1;
        cont2 = -1;
        //criando um laço que retire da list os funcionarios que estao ativos por meio deste filtro
        
        for (sys.taxi.com.br.bean.Diariafunc funcionario1 : listaf) {
        //extraindo o codigo do funcionario selecionado
        dadosCampo = "" + diaria.getCodfunc();
        dadosCampo = dadosCampo.substring((dadosCampo.indexOf("=") + 1), (dadosCampo.indexOf("]") - 1));
        cont = cont + 1;
        //achando o funcionario que esta ativo de dentro da list, para retira-lo
        if (funcionario1.getCodfunc().getCodfunc() == Integer.parseInt(dadosCampo)) {
        if (listDiariafuncTodos.size() > cont) {
        listDiariafuncTodos.remove(cont);
        } else {
        cont2 = -1;
        lacoFunc.clear();
        lacoFunc.addAll(listDiariafuncTodos);
        //laço 2 que faz o segundo filtro para achar os funcionarios ativos e retira-los
        for (sys.taxi.com.br.bean.Diariafunc funcionario2 : lacoFunc) {
        cont2 = cont2 + 1;
        if (funcionario2.getCodfunc().getCodfunc() == Integer.parseInt(dadosCampo)) {
        listDiariafuncTodos.remove(cont2);
        }
        }
        }
        
        
        }
        }
        }
         */


//obs... este codigo abaixo substitui todo oque esta acima
        //capturando todas as diarias que estiverem ativas e com taxistas livres
        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findByDiariaCorrida");
        queryDiariafunc.setParameter("situacaodiaria", 'S');
        queryDiariafunc.setParameter("situacaocorrida", 'N');
        listDiariaCadastro.clear();
        listDiariaCadastro.addAll(queryDiariafunc.getResultList());
        
    }

    private void atualizaLocais(java.util.List list, String local) {
        /*Date ini = null;
        //SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            ini = new java.util.Date();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro :" + e, "Problemas Com Data", 3);
        }

        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findLocalData");
        queryDiariafunc.setParameter("dataIni", ini);
        queryDiariafunc.setParameter("localatual", local);
        list.clear();
        list.addAll(queryDiariafunc.getResultList());
        */
        
        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findBySituacaodiariaLocal");
        queryDiariafunc.setParameter("situacaodiaria", 'S' );
        queryDiariafunc.setParameter("localcorrida",local );
        list.clear();
        list.addAll(queryDiariafunc.getResultList());
        
    }

    private void ajustaLocal(java.util.List<sys.taxi.com.br.bean.Diariafunc> list, String local, JTable tabela) {
        sys.taxi.com.br.bean.Diariafunc df = list.get(tabela.getSelectedRow());
        list.remove(tabela.getSelectedRow());
        df.setLocalcorrida(local);
        list.add(df);
    }

    private void filtroParametros() {
        //java.util.List<sys.taxi.com.br.bean.Diariafunc> list = listLocal1;
        /*atualizaLocais(listLocal2, "P2");
        Collection<sys.taxi.com.br.bean.Diariafunc> listvei = listLocal1;
        listvei.clear();
        for (sys.taxi.com.br.bean.Diariafunc lista : listLocal2) {
            if (lista.getCodveiculo().getTipovei() == CBXTipoVei.getSelectedItem()) {
                listvei.add(lista);
            }
        }
        listDiariaCadastro.clear();
        listDiariaCadastro.addAll(listvei);*/
        
        String regiao = "";
        char veiculo = 'T';
        if (RBTRegiaoUm.isSelected()){
            regiao = "R1";
        }else{if (RBTRegiaoDois.isSelected()){
            regiao = "R2";   
        }else{if (RBTQualquerUm.isSelected()){
            regiao = "RQ";   
        }}}
        if (CBXTipoVei.getSelectedItem() == "Carro"){
            veiculo = 'C';
        }else{if (CBXTipoVei.getSelectedItem() == "Moto"){
            veiculo = 'M';
        }}
        if (veiculo != 'T'){
            if(!"".equals(regiao)){
                if("RQ".equals(regiao)){
            queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findBySoVeiculo");
            queryDiariafunc.setParameter("tipoveiculo", veiculo);
            queryDiariafunc.setParameter("situacaodiaria", 'S');
            queryDiariafunc.setParameter("situacaocorrida", 'N');
            listDiariaCadastro.clear();
            listDiariaCadastro.addAll(queryDiariafunc.getResultList());
            if (listDiariaCadastro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Não tem nenhum funcionario livre de "+CBXTipoVei.getSelectedItem()+" !");
            }
                    }else{                
            queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findByVeiculoRegiao");
            queryDiariafunc.setParameter("tipoveiculo", veiculo);
            queryDiariafunc.setParameter("situacaodiaria", 'S');
            queryDiariafunc.setParameter("situacaocorrida", 'N');
            queryDiariafunc.setParameter("localcorrida", regiao);
            listDiariaCadastro.clear();
            listDiariaCadastro.addAll(queryDiariafunc.getResultList());
            if (listDiariaCadastro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Não tem nenhum funcionario livre de "+CBXTipoVei.getSelectedItem()+" nesta região!");
            }
            }}}else{if("RQ".equals(regiao)){
        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findByDiariaCorrida");
        queryDiariafunc.setParameter("situacaodiaria", 'S');
        queryDiariafunc.setParameter("situacaocorrida", 'N');
        listDiariaCadastro.clear();
        listDiariaCadastro.addAll(queryDiariafunc.getResultList());    
        }else{
        queryDiariafunc = entityManager.createNamedQuery("Diariafunc.findByDiariaCorridaLocal");
            queryDiariafunc.setParameter("situacaodiaria", 'S');
            queryDiariafunc.setParameter("situacaocorrida", 'N');
            queryDiariafunc.setParameter("localcorrida", regiao);
            listDiariaCadastro.clear();
            listDiariaCadastro.addAll(queryDiariafunc.getResultList());        
                   
        }}
    
    
    }
        

}
